{"meta":{"title":"Ferrilata's blog","subtitle":"","description":"","author":"Ferrilata","url":"119.3.128.89","root":"/"},"pages":[{"title":"404 Not Found：该页无法显示","date":"2020-08-20T09:12:53.738Z","updated":"2020-08-19T13:15:30.000Z","comments":false,"path":"/404.html","permalink":"119.3.128.89/404.html","excerpt":"","text":""},{"title":"关于","date":"2020-08-20T09:12:53.742Z","updated":"2020-08-19T13:15:30.000Z","comments":false,"path":"about/index.html","permalink":"119.3.128.89/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2020-08-20T09:13:07.446Z","updated":"2020-08-20T09:01:25.000Z","comments":false,"path":"categories/index.html","permalink":"119.3.128.89/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2020-08-20T09:16:10.077Z","updated":"2020-08-19T13:15:30.000Z","comments":false,"path":"tags/index.html","permalink":"119.3.128.89/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"服务器搭建Hexo","slug":"服务器搭建Hexo","date":"2020-08-20T08:45:02.534Z","updated":"2020-08-20T08:58:49.312Z","comments":true,"path":"2020/08/20/服务器搭建Hexo/","link":"","permalink":"119.3.128.89/2020/08/20/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAHexo/","excerpt":"","text":"买了服务器一直没用，先搞个博客吧，因为发现简书的发布博客好像有一日上限，不舒服。 首先看个服务器搭建Hexo的整体架构图，非常好，有利于理解接下来的步骤。来自博客：如何在服务器上搭建hexo博客 步骤大纲：一、 本地计算机配置Hexo程序二、服务端配置网站根目录、Git裸仓库、Git-hooks、Nginx。三、 本地计算机与服务端建立通道，实现hexo上传。四、本地计算机渲染博客并部署到服务器。 一、本地计算机配置Hexo程序Note: 本地计算机为Deepin系统，理论上适用Ubuntu、Debian hexo需要node.js的支持，所以第一步是安装nodejs 打开终端窗口，根据系统输入以下命令之一：其他nodejs版本请参考Node.js Binary Distributionsnpm会随nodejs一起安装成功。 1234567# Using Ubuntucurl -sL https://deb.nodesource.com/setup_lts.x | sudo -E bash -sudo apt-get install -y nodejs# Using Debian, as rootcurl -sL https://deb.nodesource.com/setup_lts.x | bash -apt-get install -y nodejs 验证是否安装成功： 1234# node -v返回 v12.18.3node -v# npm -v返回 6.14.6npm -v 2. 初始化Hexo博客 安装Hexo选择目录存放本地hexo博客内容（假设主目录/home/xxx/），运行1npm install -g hexo-cli 初始化hexo：1hexo init blog # blog可以是其他任何你想起的名字 安装hexo其他插件：1234cd blognpm install #这个操作功能是补全依赖环境npm install hexo-deployer-git --save # 自动部署到服务器需要的插件npm install hexo-server # 本地简单的服务器，可以测试hexo是否安装成功 测试hexo是否安装成功。执行如下命令：1hexo g &amp;&amp; hexo server 然后访问localhost:4000，如果能看到hexo界面说明本地hexo安装成功。二、服务端配置网站根目录、Git裸仓库、Git-hooks、Git上传用户、Nginx。 配置网站根目录备用 指定一个目录，假设主目录/home/xxx/，创建文件夹hexo12cd /home/xxxmkdir hexo 服务端配置Git裸仓库 指定一个目录创建git裸仓库，可以选择/var/repo/。执行：1sudo git init --bare blog.git 配置git-hooks 切换到hooks文件夹1cd /var/repo/blog.git/hooks 创建文件post-receive，执行vim post-receive，进入vim在insert模式下输入：12# !/bin/shgit --work-tree=/home/xxx/hexo --git-dir=/var/repo/blog.git checkout -f 然后:wq保存 配置Nginx 安装Nginx： 1sudo apt-get install nginx 配置Nginx.conf：Nginx.conf位置是/etc/nginx/nginx.conf（也可能是/user/local/nginx/conf，可以whereis nginx命令查看具体位置）。编辑该文件内容，修改user、server12345678910111213user root;....http &#123; server &#123; listen 80; # 监听端口 server_name &quot;your url or ip&quot;; # 域名或者ip地址 location / &#123; root /home/xxx/hexo; # 服务端网站根目录 index index.html; &#125; &#125;&#125; 然后保存。三、本地计算机与服务端建立通道，实现hexo上传。 服务端创建并配置git用户，专门用于博客上传。 创建git用户，并更改git仓库的所有者12sudo adduser git # 创建用户sudo chown -R git:git /var/repo/blog.git 禁用 git 用户的 shell 登录权限出于安全考虑，我们要让 git 用户不能通过 shell 登录。可以编辑 /etc/passwd 来实现将git:x:1001:1001:,,,:/home/git:/bin/bash改成git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell这样 git 用户可以通过 ssh 正常使用 git，但是无法登录 shell。可以在服务端试一下，su git无法切换到git用户，报错fatal: Interactive git shell is not enabled.为什么非得搞一个新的git用户，我感觉原因出在这里，如果直接使用服务端原来的用户远程上传博客也行，只是存在安全问题。 本地计算机与服务端建立ssh通道。 本地计算机执行：1ssh-keygen 一直回车即可。这一步操作会在/home/xxx/.ssh/下生成两个文件id_rsa和id_rsa.pub。 服务端在/home/git目录下创建文件夹.ssh，并在/home/git/.ssh下创建文件authorized_keys。把id_rsa.pub的内容复制到服务端的authorized_keys中。注意是把本地计算机的/home/xxx/.ssh/id_rsa.pub复制到服务端的/home/git/.sshauthorized_keys。 本地计算机配置hexo deploy。 编辑/home/xxx/blog/_config.yml，配置deploy：1234deploy: type: git repo: git@&quot;your url or ip&quot;:/var/repo/blog.git branch: master 保存。四、本地计算机渲染博客并部署到服务器。 编写博客 方式一：创建博客使用的markdown文件，然后书写内容1hexo new &quot;xxxx&quot; 创建成功后，该markdown文件在source/_posts目录下。继续编辑xxx.md即可。 方式二：直接把写好了的md文件丢进source/_posts目录下。 渲染博客：1hexo gernerate 或者1hexo g 部署博客到服务器1hexo deploy 或者1hexo d 第二步和第三步可以一起使用1hexo g &amp;&amp; hexo d 或者1hexo g -d 或者1hexo d -g 操作完成后，服务端目录/home/deepin/hexo下会有刚刚提交的博客，但/var/repo/blog.git/branches不会有博客文件，因为它是裸仓库。 注意：hexo d可能会报错Error: EACCES: permission denied, unlink ...，说什么权限拒绝。如果使用sudo hexo d，就会报另外一种错误：git@github.com: Permission denied (publickey). fatal: 无法读取远程仓库。。解决办法：一劳永逸，直接chmod -R 777 blog/。参考博客：使用Hexo+Github搭建博客的各种问题 完工。整个流程请照文章开头的架构图理解一下，比较难理解的是第二章节和第三章节。 其他发现：hexo官网文档的一键部署，支持除了Git上传的其他部署方式，包括SFTP、RSync，逻辑应该是直接远程传输到服务端制定文件夹，配置相对简单，直接配置_config.yml的deploy属性即可。 有时间试一下。","categories":[{"name":"工具技巧","slug":"工具技巧","permalink":"119.3.128.89/categories/%E5%B7%A5%E5%85%B7%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"119.3.128.89/tags/hexo/"}]}],"categories":[{"name":"工具技巧","slug":"工具技巧","permalink":"119.3.128.89/categories/%E5%B7%A5%E5%85%B7%E6%8A%80%E5%B7%A7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"119.3.128.89/tags/hexo/"}]}